{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierre\\\\Desktop\\\\ExpeditionWarsV2_2023\\\\expeditionwars-V2-2023\\\\frontEnd\\\\src\\\\Components\\\\ContainerResource.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContainerResource = () => {\n  _s();\n\n  const [resources, setResources] = useState([{\n    id: 1,\n    type: 'gold',\n    amount: 0\n  }, {\n    id: 2,\n    type: 'iron',\n    amount: 0\n  }, {\n    id: 3,\n    type: 'energy',\n    amount: 0\n  }]);\n  const production = 1; // Fonction pour augmenter la valeur d'une ressource\n\n  const increaseResource = (id, amount) => {\n    setResources(prevResources => prevResources.map(resource => resource.id === id ? { ...resource,\n      amount: resource.amount + amount\n    } : resource));\n  }; // Utiliser useEffect pour déclencher l'augmentation de la ressource \"gold\" chaque seconde\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      increaseResource(1, production); // Augmenter la ressource \"gold\" de 5 chaque seconde (1 est l'id de la ressource \"gold\" dans le tableau)\n    }, 1000); // Interval de 1000 ms (1 seconde)\n    // Nettoyer l'intervalle lorsque le composant est démonté pour éviter les fuites de mémoire\n\n    return () => clearInterval(interval);\n  }, []); // Le tableau vide [] en tant que dépendance signifie que useEffect s'exécute uniquement après le premier rendu du composant\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerResource\",\n    children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerMiniResource\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"resourceText\",\n        children: [resource.type, \": \", resource.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, resource.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContainerResource, \"h807301KtpdMC2YTV3hlrEWPuPs=\");\n\n_c = ContainerResource;\nexport default ContainerResource;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerResource\");","map":{"version":3,"names":["React","useState","useEffect","ContainerResource","resources","setResources","id","type","amount","production","increaseResource","prevResources","map","resource","interval","setInterval","clearInterval"],"sources":["C:/Users/Pierre/Desktop/ExpeditionWarsV2_2023/expeditionwars-V2-2023/frontEnd/src/Components/ContainerResource.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ContainerResource = () => {\r\n\r\n    const [resources, setResources] = useState([\r\n        {\r\n            id: 1,\r\n            type: 'gold',\r\n            amount: 0,\r\n        },\r\n        {\r\n            id: 2,\r\n            type: 'iron',\r\n            amount: 0,\r\n        },\r\n        {\r\n            id: 3,\r\n            type: 'energy',\r\n            amount: 0,\r\n        },\r\n    ]);\r\n\r\n    const production = 1\r\n\r\n    // Fonction pour augmenter la valeur d'une ressource\r\n    const increaseResource = (id, amount) => {\r\n        setResources((prevResources) =>\r\n            prevResources.map((resource) =>\r\n                resource.id === id ? { ...resource, amount: resource.amount + amount } : resource\r\n            )\r\n        );\r\n    };\r\n\r\n    // Utiliser useEffect pour déclencher l'augmentation de la ressource \"gold\" chaque seconde\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            increaseResource(1, production); // Augmenter la ressource \"gold\" de 5 chaque seconde (1 est l'id de la ressource \"gold\" dans le tableau)\r\n        }, 1000); // Interval de 1000 ms (1 seconde)\r\n\r\n        // Nettoyer l'intervalle lorsque le composant est démonté pour éviter les fuites de mémoire\r\n        return () => clearInterval(interval);\r\n    }, []); // Le tableau vide [] en tant que dépendance signifie que useEffect s'exécute uniquement après le premier rendu du composant\r\n\r\n    return (\r\n        <div className=\"containerResource\">\r\n            {resources.map((resource) => (\r\n                <div key={resource.id} className=\"containerMiniResource\">\r\n          <span className=\"resourceText\">\r\n            {resource.type}: {resource.amount}\r\n          </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContainerResource;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CACvC;IACIK,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,MAFV;IAGIC,MAAM,EAAE;EAHZ,CADuC,EAMvC;IACIF,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,MAFV;IAGIC,MAAM,EAAE;EAHZ,CANuC,EAWvC;IACIF,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,QAFV;IAGIC,MAAM,EAAE;EAHZ,CAXuC,CAAD,CAA1C;EAkBA,MAAMC,UAAU,GAAG,CAAnB,CApB4B,CAsB5B;;EACA,MAAMC,gBAAgB,GAAG,CAACJ,EAAD,EAAKE,MAAL,KAAgB;IACrCH,YAAY,CAAEM,aAAD,IACTA,aAAa,CAACC,GAAd,CAAmBC,QAAD,IACdA,QAAQ,CAACP,EAAT,KAAgBA,EAAhB,GAAqB,EAAE,GAAGO,QAAL;MAAeL,MAAM,EAAEK,QAAQ,CAACL,MAAT,GAAkBA;IAAzC,CAArB,GAAyEK,QAD7E,CADQ,CAAZ;EAKH,CAND,CAvB4B,CA+B5B;;;EACAX,SAAS,CAAC,MAAM;IACZ,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BL,gBAAgB,CAAC,CAAD,EAAID,UAAJ,CAAhB,CAD+B,CACE;IACpC,CAF2B,EAEzB,IAFyB,CAA5B,CADY,CAGF;IAEV;;IACA,OAAO,MAAMO,aAAa,CAACF,QAAD,CAA1B;EACH,CAPQ,EAON,EAPM,CAAT,CAhC4B,CAuCpB;;EAER,oBACI;IAAK,SAAS,EAAC,mBAAf;IAAA,UACKV,SAAS,CAACQ,GAAV,CAAeC,QAAD,iBACX;MAAuB,SAAS,EAAC,uBAAjC;MAAA,uBACN;QAAM,SAAS,EAAC,cAAhB;QAAA,WACGA,QAAQ,CAACN,IADZ,QACoBM,QAAQ,CAACL,MAD7B;MAAA;QAAA;QAAA;QAAA;MAAA;IADM,GAAUK,QAAQ,CAACP,EAAnB;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CApDD;;GAAMH,iB;;KAAAA,iB;AAsDN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}