{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierre\\\\Desktop\\\\ExpeditionWarsV2_2023\\\\expeditionwars-V2-2023\\\\frontEnd\\\\src\\\\Components\\\\Resource\\\\ContainerResource.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContainerResource = _ref => {\n  _s();\n\n  let {\n    backgroundImage\n  } = _ref;\n  const [resources, setResources] = useState([{\n    id: 1,\n    type: 'gold',\n    amount: 0,\n    production: 1\n  }, {\n    id: 2,\n    type: 'iron',\n    amount: 0,\n    production: 2\n  }, {\n    id: 3,\n    type: 'energy',\n    amount: 0,\n    production: 0.5\n  }]);\n  const imgRef = React.useRef(null);\n  const [imgDimensions, setImgDimensions] = React.useState({\n    width: 0,\n    height: 0\n  });\n  React.useEffect(() => {\n    if (imgRef.current) {\n      setImgDimensions({\n        width: imgRef.current.width,\n        height: imgRef.current.height\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      resources.forEach(resource => {\n        //PARCOURS LE TABLEAU\n        increaseResource(resource.id, resource.production);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [resources]);\n\n  const increaseResource = (id, amount) => {\n    setResources(prevResources => prevResources.map(resource => resource.id === id ? { ...resource,\n      amount: resource.amount + amount\n    } : resource));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerResource\",\n    tyle: {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'contain',\n      // Pour adapter l'image à la taille du conteneur\n      backgroundPosition: 'center',\n      // Pour centrer l'image horizontalement et verticalement\n      width: imgDimensions.width,\n      // Définir la largeur du conteneur en fonction de la largeur de l'image\n      height: imgDimensions.height // Définir la hauteur du conteneur en fonction de la hauteur de l'image\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: backgroundImage,\n      alt: \"header\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContainerResource, \"FD696hiVUUjLpWvhsKeLa+d/xYY=\");\n\n_c = ContainerResource;\nexport default ContainerResource;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerResource\");","map":{"version":3,"names":["React","useState","useEffect","ContainerResource","backgroundImage","resources","setResources","id","type","amount","production","imgRef","useRef","imgDimensions","setImgDimensions","width","height","current","interval","setInterval","forEach","resource","increaseResource","clearInterval","prevResources","map","backgroundRepeat","backgroundSize","backgroundPosition","display"],"sources":["C:/Users/Pierre/Desktop/ExpeditionWarsV2_2023/expeditionwars-V2-2023/frontEnd/src/Components/Resource/ContainerResource.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ContainerResource = ({ backgroundImage }) => {\r\n    const [resources, setResources] = useState([\r\n        {\r\n            id: 1,\r\n            type: 'gold',\r\n            amount: 0,\r\n            production: 1,\r\n        },\r\n        {\r\n            id: 2,\r\n            type: 'iron',\r\n            amount: 0,\r\n            production: 2,\r\n        },\r\n        {\r\n            id: 3,\r\n            type: 'energy',\r\n            amount: 0,\r\n            production: 0.5,\r\n        },\r\n    ]);\r\n    const imgRef = React.useRef(null);\r\n    const [imgDimensions, setImgDimensions] = React.useState({ width: 0, height: 0 });\r\n\r\n    React.useEffect(() => {\r\n        if (imgRef.current) {\r\n            setImgDimensions({\r\n                width: imgRef.current.width,\r\n                height: imgRef.current.height,\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            resources.forEach((resource) => { //PARCOURS LE TABLEAU\r\n                increaseResource(resource.id, resource.production);\r\n            });\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [resources]);\r\n\r\n\r\n    const increaseResource = (id, amount) => {\r\n        setResources((prevResources) =>\r\n            prevResources.map((resource) =>\r\n                resource.id === id ? { ...resource, amount: resource.amount + amount } : resource\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"containerResource\"\r\n             tyle={{\r\n                 backgroundImage: `url(${backgroundImage})`,\r\n                 backgroundRepeat: 'no-repeat',\r\n                 backgroundSize: 'contain', // Pour adapter l'image à la taille du conteneur\r\n                 backgroundPosition: 'center', // Pour centrer l'image horizontalement et verticalement\r\n                 width: imgDimensions.width, // Définir la largeur du conteneur en fonction de la largeur de l'image\r\n                 height: imgDimensions.height, // Définir la hauteur du conteneur en fonction de la hauteur de l'image\r\n             }}\r\n        >\r\n            <img ref={imgRef} src={backgroundImage} alt=\"header\" style={{ display: 'none' }} />\r\n            <div >\r\n            {/*{resources.map((resource) => (*/}\r\n            {/*    <div key={resource.id} className=\"containerMiniResource\">*/}\r\n            {/*      <span className=\"resourceText\">*/}\r\n            {/*        {resource.type}: {resource.amount}*/}\r\n            {/*      </span>*/}\r\n            {/*    </div>*/}\r\n            {/*))}*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContainerResource;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,iBAAiB,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EAC/C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CACvC;IACIM,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,MAFV;IAGIC,MAAM,EAAE,CAHZ;IAIIC,UAAU,EAAE;EAJhB,CADuC,EAOvC;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,MAFV;IAGIC,MAAM,EAAE,CAHZ;IAIIC,UAAU,EAAE;EAJhB,CAPuC,EAavC;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,QAFV;IAGIC,MAAM,EAAE,CAHZ;IAIIC,UAAU,EAAE;EAJhB,CAbuC,CAAD,CAA1C;EAoBA,MAAMC,MAAM,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAf;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,KAAK,CAACC,QAAN,CAAe;IAAEc,KAAK,EAAE,CAAT;IAAYC,MAAM,EAAE;EAApB,CAAf,CAA1C;EAEAhB,KAAK,CAACE,SAAN,CAAgB,MAAM;IAClB,IAAIS,MAAM,CAACM,OAAX,EAAoB;MAChBH,gBAAgB,CAAC;QACbC,KAAK,EAAEJ,MAAM,CAACM,OAAP,CAAeF,KADT;QAEbC,MAAM,EAAEL,MAAM,CAACM,OAAP,CAAeD;MAFV,CAAD,CAAhB;IAIH;EACJ,CAPD,EAOG,EAPH;EASAd,SAAS,CAAC,MAAM;IACZ,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/Bd,SAAS,CAACe,OAAV,CAAmBC,QAAD,IAAc;QAAE;QAC9BC,gBAAgB,CAACD,QAAQ,CAACd,EAAV,EAAcc,QAAQ,CAACX,UAAvB,CAAhB;MACH,CAFD;IAGH,CAJ2B,EAIzB,IAJyB,CAA5B;IAKA,OAAO,MAAMa,aAAa,CAACL,QAAD,CAA1B;EACH,CAPQ,EAON,CAACb,SAAD,CAPM,CAAT;;EAUA,MAAMiB,gBAAgB,GAAG,CAACf,EAAD,EAAKE,MAAL,KAAgB;IACrCH,YAAY,CAAEkB,aAAD,IACTA,aAAa,CAACC,GAAd,CAAmBJ,QAAD,IACdA,QAAQ,CAACd,EAAT,KAAgBA,EAAhB,GAAqB,EAAE,GAAGc,QAAL;MAAeZ,MAAM,EAAEY,QAAQ,CAACZ,MAAT,GAAkBA;IAAzC,CAArB,GAAyEY,QAD7E,CADQ,CAAZ;EAKH,CAND;;EAQA,oBACI;IAAK,SAAS,EAAC,mBAAf;IACK,IAAI,EAAE;MACFjB,eAAe,EAAG,OAAMA,eAAgB,GADtC;MAEFsB,gBAAgB,EAAE,WAFhB;MAGFC,cAAc,EAAE,SAHd;MAGyB;MAC3BC,kBAAkB,EAAE,QAJlB;MAI4B;MAC9Bb,KAAK,EAAEF,aAAa,CAACE,KALnB;MAK0B;MAC5BC,MAAM,EAAEH,aAAa,CAACG,MANpB,CAM4B;;IAN5B,CADX;IAAA,wBAUI;MAAK,GAAG,EAAEL,MAAV;MAAkB,GAAG,EAAEP,eAAvB;MAAwC,GAAG,EAAC,QAA5C;MAAqD,KAAK,EAAE;QAAEyB,OAAO,EAAE;MAAX;IAA5D;MAAA;MAAA;MAAA;IAAA,QAVJ,eAWI;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CA1ED;;GAAM1B,iB;;KAAAA,iB;AA4EN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}