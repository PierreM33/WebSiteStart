{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierre\\\\Desktop\\\\ExpeditionWarsV2_2023\\\\expeditionwars-V2-2023\\\\frontEnd\\\\src\\\\Components\\\\ContainerResource.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContainerResource = () => {\n  _s();\n\n  const [resources, setResources] = useState([{\n    id: 1,\n    type: 'gold',\n    amount: 0,\n    production: 1 // Ajoutez la propriété production pour chaque ressource\n\n  }, {\n    id: 2,\n    type: 'iron',\n    amount: 0,\n    production: 2 // Exemple : production de 2 pour la ressource \"iron\"\n\n  }, {\n    id: 3,\n    type: 'energy',\n    amount: 0,\n    production: 0.5 // Exemple : production de 0.5 pour la ressource \"energy\"\n\n  }]); // Fonction pour augmenter la valeur d'une ressource\n\n  const increaseResource = (id, amount) => {\n    setResources(prevResources => prevResources.map(resource => resource.id === id ? { ...resource,\n      amount: resource.amount + amount\n    } : resource));\n  }; // Utiliser useEffect pour déclencher l'augmentation de chaque ressource chaque seconde\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Parcourir chaque ressource et augmenter sa quantité en fonction de sa production\n      resources.forEach(resource => {\n        increaseResource(resource.id, resource.production);\n      });\n    }, 1000); // Interval de 1000 ms (1 seconde)\n    // Nettoyer l'intervalle lorsque le composant est démonté pour éviter les fuites de mémoire\n\n    return () => clearInterval(interval);\n  }, [resources]); // Utilisez le tableau resources comme dépendance pour déclencher useEffect lorsqu'il change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerResource\",\n    children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerMiniResource\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"resourceText\",\n        children: [resource.type, \": \", resource.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, resource.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContainerResource, \"zdfR9eShFbPtn/023OXUuoxdNE4=\");\n\n_c = ContainerResource;\nexport default ContainerResource;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerResource\");","map":{"version":3,"names":["React","useState","useEffect","ContainerResource","resources","setResources","id","type","amount","production","increaseResource","prevResources","map","resource","interval","setInterval","forEach","clearInterval"],"sources":["C:/Users/Pierre/Desktop/ExpeditionWarsV2_2023/expeditionwars-V2-2023/frontEnd/src/Components/ContainerResource.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ContainerResource = () => {\r\n    const [resources, setResources] = useState([\r\n        {\r\n            id: 1,\r\n            type: 'gold',\r\n            amount: 0,\r\n            production: 1, // Ajoutez la propriété production pour chaque ressource\r\n        },\r\n        {\r\n            id: 2,\r\n            type: 'iron',\r\n            amount: 0,\r\n            production: 2, // Exemple : production de 2 pour la ressource \"iron\"\r\n        },\r\n        {\r\n            id: 3,\r\n            type: 'energy',\r\n            amount: 0,\r\n            production: 0.5, // Exemple : production de 0.5 pour la ressource \"energy\"\r\n        },\r\n    ]);\r\n\r\n    // Fonction pour augmenter la valeur d'une ressource\r\n    const increaseResource = (id, amount) => {\r\n        setResources((prevResources) =>\r\n            prevResources.map((resource) =>\r\n                resource.id === id ? { ...resource, amount: resource.amount + amount } : resource\r\n            )\r\n        );\r\n    };\r\n\r\n    // Utiliser useEffect pour déclencher l'augmentation de chaque ressource chaque seconde\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            // Parcourir chaque ressource et augmenter sa quantité en fonction de sa production\r\n            resources.forEach((resource) => {\r\n                increaseResource(resource.id, resource.production);\r\n            });\r\n        }, 1000); // Interval de 1000 ms (1 seconde)\r\n\r\n        // Nettoyer l'intervalle lorsque le composant est démonté pour éviter les fuites de mémoire\r\n        return () => clearInterval(interval);\r\n    }, [resources]); // Utilisez le tableau resources comme dépendance pour déclencher useEffect lorsqu'il change\r\n\r\n    return (\r\n        <div className=\"containerResource\">\r\n            {resources.map((resource) => (\r\n                <div key={resource.id} className=\"containerMiniResource\">\r\n          <span className=\"resourceText\">\r\n            {resource.type}: {resource.amount}\r\n          </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContainerResource;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CACvC;IACIK,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,MAFV;IAGIC,MAAM,EAAE,CAHZ;IAIIC,UAAU,EAAE,CAJhB,CAImB;;EAJnB,CADuC,EAOvC;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,MAFV;IAGIC,MAAM,EAAE,CAHZ;IAIIC,UAAU,EAAE,CAJhB,CAImB;;EAJnB,CAPuC,EAavC;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,QAFV;IAGIC,MAAM,EAAE,CAHZ;IAIIC,UAAU,EAAE,GAJhB,CAIqB;;EAJrB,CAbuC,CAAD,CAA1C,CAD4B,CAsB5B;;EACA,MAAMC,gBAAgB,GAAG,CAACJ,EAAD,EAAKE,MAAL,KAAgB;IACrCH,YAAY,CAAEM,aAAD,IACTA,aAAa,CAACC,GAAd,CAAmBC,QAAD,IACdA,QAAQ,CAACP,EAAT,KAAgBA,EAAhB,GAAqB,EAAE,GAAGO,QAAL;MAAeL,MAAM,EAAEK,QAAQ,CAACL,MAAT,GAAkBA;IAAzC,CAArB,GAAyEK,QAD7E,CADQ,CAAZ;EAKH,CAND,CAvB4B,CA+B5B;;;EACAX,SAAS,CAAC,MAAM;IACZ,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B;MACAX,SAAS,CAACY,OAAV,CAAmBH,QAAD,IAAc;QAC5BH,gBAAgB,CAACG,QAAQ,CAACP,EAAV,EAAcO,QAAQ,CAACJ,UAAvB,CAAhB;MACH,CAFD;IAGH,CAL2B,EAKzB,IALyB,CAA5B,CADY,CAMF;IAEV;;IACA,OAAO,MAAMQ,aAAa,CAACH,QAAD,CAA1B;EACH,CAVQ,EAUN,CAACV,SAAD,CAVM,CAAT,CAhC4B,CA0CX;;EAEjB,oBACI;IAAK,SAAS,EAAC,mBAAf;IAAA,UACKA,SAAS,CAACQ,GAAV,CAAeC,QAAD,iBACX;MAAuB,SAAS,EAAC,uBAAjC;MAAA,uBACN;QAAM,SAAS,EAAC,cAAhB;QAAA,WACGA,QAAQ,CAACN,IADZ,QACoBM,QAAQ,CAACL,MAD7B;MAAA;QAAA;QAAA;QAAA;MAAA;IADM,GAAUK,QAAQ,CAACP,EAAnB;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAvDD;;GAAMH,iB;;KAAAA,iB;AAyDN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}